{"version":3,"sources":["components/SubjectCard/index.js","components/SubjectList/index.js","pages/MainPage.js","components/Container/index.js","FLASHCARDlogo.png","components/Navbar/index.js","components/FlashcardCard/index.js","components/SentenceCard/index.js","components/Flashcard/index.js","App.js","reportWebVitals.js","index.js"],"names":["SubjectCard","subject","newTo","pathname","name","state","className","to","SubjectList","subjectlist","map","id","MainPage","useState","Data","flashcards","Container","props","Navbar","role","src","FLASHCARDlogo","alt","target","rel","href","FlashcardCard","flip","handleFlip","currentQuestion","onClick","answer","english","question","SentenceCard","handleFormSubmit","handleAnswerOnChange","showAnswer","isCorrect","submittedAnswer","disabled","setDisabled","useEffect","onSubmit","type","onChange","value","placeholder","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","Flashcard","useLocation","questionArray","card","questionList","setQuestionList","setCurrentQuestion","index","setIndex","reviewQuestionList","setReviewQuestionList","count","setCount","total","setFlip","setSubmittedAnswer","setShowAnswer","setIsCorrect","nextQuestionClick","i","indexOf","restartQuestionClick","handleCheckAnswer","ans","newAns","replace","toLowerCase","currentAns","max","e","preventDefault","App","basename","exact","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bed69a3.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { Link } from 'react-router-dom';\n\nexport default function SubjectCard( {subject} ) {\n  const newTo = {\n    pathname: \"/\" + subject.name,\n    state: {\n      subject: subject\n    }\n  }\n\n  return (\n    <div className=\"card subject-card\">\n      <Link to={newTo}>\n        <div className=\"card-content\">\n          <p>{subject.name}</p>\n        </div>\n      </Link>\n    </div>\n  )\n}","import React from 'react';\nimport \"./style.css\"\nimport SubjectCard from '../SubjectCard';\n\nconst SubjectList = ( {subjectlist} ) => {\n\n  return (\n    <>\n      <div className=\"subject-list-container\">\n        <div className=\"columns is-multiline is-mobile is-variable is-1-mobile\">\n            {\n              subjectlist.map( subject => {\n                return (\n                 <div className=\"column is-one-quarter-tablet is-half-mobile\" key={subject.id}>\n                  <SubjectCard subject={subject} />\n                 </div> \n                 )\n              })\n            }\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SubjectList;","import React, { useState } from 'react';\nimport SubjectList from '../components/SubjectList';\nimport Data from '../data/appData.json'\n\nconst MainPage = () => {\n  const [flashcards] = useState(Data)\n    return(\n      <>\n        <div className=\"hero is-small\">\n          <div className=\"hero-body\">\n            <p className=\"title\">Pick a Subject</p>\n          </div>\n        </div>\n        <SubjectList subjectlist={flashcards} />\n      </>\n    )\n\n}\n\nexport default MainPage;","import React from \"react\";\nimport \"./style.css\";\n\nconst Container = (props) => {\n    return <div className=\"container\" {...props} />\n}\n\nexport default Container;","export default __webpack_public_path__ + \"static/media/FLASHCARDlogo.9df6f3fe.png\";","import React from \"react\"\nimport { Link } from 'react-router-dom';\nimport Container from \"../Container\";\nimport FLASHCARDlogo from \"../../FLASHCARDlogo.png\"\nimport \"./style.css\"\n\nexport default function Navbar() {\n return(\n  <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n    <Container>\n      <div className=\"navbar-brand\">\n        <div className=\"navbar-item\">\n          <Link to=\"/\">\n            <img src={FLASHCARDlogo} alt=\"logo\" className=\"logo\" />\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"navbar-menu\">\n      {/* hidden on mobile */}\n        <div className=\"navbar-start\">\n          <Link className=\"navbar-item\" to =\"/\">Home</Link>\n        </div>\n        <div className=\"navbar-end\">\n          <a className=\"navbar-item\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/gerarjon/flash-cards\">Github</a>\n        </div>\n      </div>\n    </Container>\n  </nav>\n )\n}","import React from 'react' \n\nconst FlashcardCard = ({ flip, handleFlip, currentQuestion}) => {\n  return (\n  <>\n    <div className=\"flashcard-container\" onClick={handleFlip}>\n      <div className=\"flashcard-text\">\n        { flip ? <div className=\"front\">\n          { currentQuestion ? <><div>{currentQuestion.answer}</div><div>{currentQuestion.english}</div></> : `Loading...` }</div> : <div className=\"back\">{ currentQuestion ? currentQuestion.question : `Loading...` }</div> \n        }\n      </div>\n    </div>\n  </>\n  )\n}\n\nexport default FlashcardCard;","import React, {useEffect, useState} from 'react'\nimport './style.css'\n\nconst SentenceCard = ({ currentQuestion, handleFormSubmit, handleAnswerOnChange, showAnswer, isCorrect, submittedAnswer, }) => {\n  const [disabled, setDisabled] = useState(false)\n\n  useEffect(()=>{\n    if (currentQuestion) {\n      setDisabled(false)\n    } else {\n      setDisabled(true)\n    }\n  }, [currentQuestion])\n\n  return(\n    <div className=\"flashcard-submit-container columns is-multiline\">\n      <div className=\"flashcard-submit-question column is-full\">\n        {currentQuestion ? currentQuestion.question : 'Loading...'}\n      </div>\n      <div className=\"flashcard-submit-answer column is-full\">\n        {currentQuestion && showAnswer ? currentQuestion.answer : ''}\n      </div>\n      <fieldset disabled={disabled}>\n        <form className=\"flashcard-submit-form column\" onSubmit={handleFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Translate to English</label>\n            <div className=\"control\">\n              <input className={`input ${isCorrect === true ? \"is-success\" : `${isCorrect === false ? \"is-danger\" : \"\"}` }`} type=\"text\" onChange={handleAnswerOnChange} value={submittedAnswer} placeholder=\"e.g. I am Takeshi\" />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n                <button className=\"button is-primary\" type=\"submit\">Submit</button>\n            </div>\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  )\n}\n\nexport default SentenceCard;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport FlashcardCard from '../FlashcardCard';\nimport SentenceCard from '../SentenceCard';\nimport './style.css';\n\n// Shuffle function\nconst shuffle = (array) => {\n  var currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\n\nconst Flashcard = () => {\n  const { subject } = useLocation().state;\n  const questionArray = subject.card;\n  const [questionList, setQuestionList] = useState(questionArray);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [index, setIndex] = useState(0);\n  const [reviewQuestionList, setReviewQuestionList] = useState([])\n  const [count, setCount] = useState(0);\n  const [total] = useState(questionArray.length)\n\n  // for FlashcardCard\n  const [flip, setFlip] = useState(false);\n\n  // for SentenceCard\n  const [submittedAnswer, setSubmittedAnswer] = useState('');\n  const [showAnswer, setShowAnswer] = useState(false)\n  const [isCorrect, setIsCorrect] = useState('')\n\n  // Load questionArray on start\n  useEffect(()=>{\n    setQuestionList(shuffle(questionArray))\n    setCurrentQuestion(questionList[0])\n  },[]) // eslint-disable-line\n\n  // go to next question function\n  const nextQuestionClick = () => {\n    let i = questionList.indexOf(questionList[index])\n\n    if ( i >= 0 && i < questionList.length) {\n      setCurrentQuestion(questionList[i + 1]);\n      setIndex(index => index + 1);\n      setCount(count => count + 1);\n      setFlip(false)\n      setIsCorrect('')\n      setShowAnswer(false)\n      setSubmittedAnswer('')\n    } else if (reviewQuestionList.length > 0) {\n      setQuestionList(reviewQuestionList);\n      setReviewQuestionList([]);\n      setCurrentQuestion(questionList[0]);\n      setIndex(0);\n    } else {\n      restartQuestionClick()\n    }\n  }\n\n  // resets questionList, index, and sets currentQuestion to first question\n  const restartQuestionClick = () => {\n    setQuestionList(shuffle(questionArray));\n    setCurrentQuestion(questionList[0])\n    setIndex(0)\n    setCount(0)\n    setIsCorrect('')\n    setFlip(false)\n  }\n\n  // adds current question to array of questions to review\n  const reviewQuestionClick = () => {\n    setReviewQuestionList(reviewQuestionList => [...reviewQuestionList, currentQuestion]);\n    setCount(count => count - 1);\n    nextQuestionClick();\n  }\n\n  // changes state of flip to opposite\n  const handleFlip = () => {\n    setFlip(!flip)\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (submittedAnswer) {\n      handleCheckAnswer(submittedAnswer)\n      setShowAnswer(true)\n    }\n  }\n\n  const handleCheckAnswer = (ans) => {\n    let newAns = ans.replace(/[.,/#!$%^&*;:{}=\\-_`~()@?]/g,\"\").replace(/\\s{2,}/g,\" \").toLowerCase();\n    let currentAns = currentQuestion.answer.replace(/[.,/#!$%^&*;:{}=\\-_`~()@?]/g,\"\").replace(/\\s{2,}/g,\" \").toLowerCase();\n    if (newAns === currentAns) {\n      setIsCorrect(true)\n    } else {\n      setIsCorrect(false)\n    }\n  }\n\n  const handleAnswerOnChange = (e) => {\n    setSubmittedAnswer(e.target.value)\n  }\n\n  return( \n    <div>\n      <div className=\"hero is-small\">\n        <div className=\"hero-body\">\n          <p className=\"title\">{subject.name}</p>\n        </div>\n      </div>\n      <div className=\"flashcard\">\n        <progress className=\"progress is-success\" value={count} max={total}>{count / total}</progress>\n        { subject.type === \"flashcard\" ? \n        <FlashcardCard \n          flip={flip}\n          handleFlip={handleFlip}\n          currentQuestion={currentQuestion}\n        /> :\n        <SentenceCard\n          currentQuestion={currentQuestion}\n          handleFormSubmit={handleFormSubmit}\n          handleAnswerOnChange={handleAnswerOnChange}\n          showAnswer={showAnswer}\n          isCorrect={isCorrect}\n          submittedAnswer={submittedAnswer}\n        />\n        }\n        <div className=\"flashcard-button-container\">\n          <button className=\"button\" onClick={nextQuestionClick}>{index < questionList.length ? 'Next Card' : 'Restart'}</button>\n          {currentQuestion ? <button className=\"button\" onClick={reviewQuestionClick}>Set aside</button> : ''}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Flashcard;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport 'bulma/css/bulma.min.css';\nimport './App.css';\nimport MainPage from './pages/MainPage';\nimport Container from './components/Container';\nimport Navbar from './components/Navbar';\nimport Flashcard from './components/Flashcard';\n\nclass App extends Component {\n  render() {\n    return (\n        <Router basename=\"/flash-cards\">\n          <Navbar />\n          <Container>\n            <Switch>\n              <Route exact path='/' component={MainPage} />\n              <Route exact path=\"/:name\" component={Flashcard} />;\n            </Switch>\n          </Container>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}